name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  GOTOOLCHAIN: auto
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Verify gofmt
        run: |
          set -e
          CHANGED=$(gofmt -l $(find . -name '*.go' -not -path './.tools/*' -not -path './vendor/*'))
          if [ -n "$CHANGED" ]; then
            echo "Go files need formatting:" && echo "$CHANGED"
            exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.61.0
          args: ./...

      - name: Run unit tests
        run: go test ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build service images (cached)
        uses: docker/bake-action@v4
        with:
          files: |
            deploy/docker-compose.yml
          targets: gateway crm wms analytics analytics-api
          set: |
            *.cache-from=type=gha,scope=asfp-pro
            *.cache-to=type=gha,scope=asfp-pro,mode=max
            *.output=type=docker

      - name: Copy environment file
        run: cp deploy/.env.example deploy/.env

      - name: Start dev stack
        run: docker compose --env-file deploy/.env -f deploy/docker-compose.yml up -d

      - name: Wait for services
        run: |
          timeout 180 bash -c 'until curl -sf http://localhost:8080/ready; do sleep 2; done'
          timeout 180 bash -c 'until curl -sf http://localhost:8081/ready; do sleep 2; done'
          timeout 180 bash -c 'until curl -sf http://localhost:8082/ready; do sleep 2; done'

      - name: Reset MinIO bucket
        run: bash scripts/minio-reset.sh

      - name: Run smoke tests
        env:
          SMOKE_GATEWAY_URL: http://localhost:8080
          SMOKE_CRM_URL: http://localhost:8081
          SMOKE_WMS_URL: http://localhost:8082
        run: make smoke

      - name: Tear down stack
        if: always()
        run: docker compose --env-file deploy/.env -f deploy/docker-compose.yml down -v
