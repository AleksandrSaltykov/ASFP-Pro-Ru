version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    container_name: asfp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    container_name: asfp-clickhouse
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"
      CLICKHOUSE_DB: analytics
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./init/clickhouse:/docker-entrypoint-initdb.d

  tarantool:
    image: tarantool/tarantool:2.11
    container_name: asfp-tarantool
    environment:
      TARANTOOL_USER_NAME: queue
      TARANTOOL_USER_PASSWORD: queue-pass
    command: tarantool /opt/tarantool/init/init.lua
    volumes:
      - tarantool_data:/var/lib/tarantool
      - ./init/tarantool:/opt/tarantool/init
    ports:
      - "3301:3301"

  redis:
    image: redis:7-alpine
    container_name: asfp-redis
    ports:
      - "6379:6379"

  ceph:
    image: minio/minio:latest
    container_name: asfp-ceph
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      MINIO_REGION_NAME: ru-central
    command: server /data --address :7480 --console-address :9001
    ports:
      - "7480:7480"
      - "9001:9001"
    volumes:
      - ceph_data:/data
  gateway:
    build:
      context: ..
      dockerfile: gateway/Dockerfile
    container_name: asfp-gateway
    depends_on:
      - postgres
      - tarantool
      - ceph
    env_file: .env
    environment:
      GATEWAY_DATABASE_URL: ${DATABASE_URL}
      GATEWAY_TARANTOOL_ADDR: tarantool:3301
      GATEWAY_TARANTOOL_QUEUE: events_queue
      GATEWAY_S3_ENDPOINT: http://ceph:7480
      GATEWAY_S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      GATEWAY_S3_SECRET_KEY: ${S3_SECRET_KEY}
      GATEWAY_S3_REGION: ru-central
      GATEWAY_S3_USE_SSL: "false"
    ports:
      - "8080:8080"

  crm:
    build:
      context: ..
      dockerfile: modules/crm/Dockerfile
    container_name: asfp-crm
    depends_on:
      - postgres
      - tarantool
    env_file: .env
    environment:
      CRM_DATABASE_URL: ${DATABASE_URL}
      CRM_TARANTOOL_ADDR: tarantool:3301
      CRM_TARANTOOL_QUEUE: events_queue
    ports:
      - "8081:8081"

  wms:
    build:
      context: ..
      dockerfile: modules/wms/Dockerfile
    container_name: asfp-wms
    depends_on:
      - postgres
    env_file: .env
    environment:
      WMS_DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8082:8082"

  analytics:
    build:
      context: ..
      dockerfile: modules/analytics/Dockerfile
    container_name: asfp-analytics
    depends_on:
      - tarantool
      - clickhouse
    env_file: .env
    environment:
      ANALYTICS_DATABASE_URL: ${DATABASE_URL}
      ANALYTICS_TARANTOOL_ADDR: tarantool:3301
      ANALYTICS_TARANTOOL_QUEUE: events_queue
      ANALYTICS_CLICKHOUSE_DSN: ${CLICKHOUSE_DSN}

  nginx:
    image: nginx:1.27-alpine
    container_name: asfp-nginx
    depends_on:
      - gateway
      - crm
      - wms
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"

volumes:
  postgres_data:
  clickhouse_data:
  tarantool_data:
  ceph_data:
